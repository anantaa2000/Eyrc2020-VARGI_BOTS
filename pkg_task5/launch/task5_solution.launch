<launch>
    <!-- loading para,eter file for nessary ros iot configurations -->
    <rosparam file="$(find pkg_ros_iot_bridge)/config/config_pyiot.yaml"/>
	<!-- Launch Task-5 Simulation Environment in Gazebo -->
    <include file="$(find pkg_vb_sim)/launch/task5_simulation.launch" />

    <!-- using provided packages -->
    <include file="$(find pkg_vb_sim)/launch/two_ur5_move_group.launch" />

    <!-- running ros iot bridge  nodes for bridging actio -->
    <node pkg="pkg_ros_iot_bridge" name="node_action_server_ros_iot_bridge" type="node_action_server_ros_iot_bridge.py" output="screen"/>

    <!-- Add bins, conveyor, shelf  to Moveit! Planning Scene in RViz -->

    <group ns = "ur5_1" >  
    	<arg name="scene_file" default="$(find pkg_task5)/config/rviz/scene_file_ur5_1.scene"/> 
    	<node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>
    </group>


    <group ns = "ur5_2">  
    	<arg name="scene_file" default="$(find pkg_task5)/config/rviz/scene_file_ur5_2.scene"/> 
    	<node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>
    </group>


    <!-- node for operating ur5_2.....  -->
    <node name= "node_t5_ur5_2" pkg= "pkg_task5" type="node_t5_ur5_2.py" output="screen"/>


 	<!-- node for operating ur5_1 -->
    <node name= "node_t5_ur5_1" pkg= "pkg_task5" type="node_t5_ur5_1.py" output="screen"/>

    <!-- Recording Bag File for Submission -->
    <arg name="record" default="false"/>
    <arg name="rec_name" default="t5.bag"/>

    <group if="$(arg record)">
        <node name="rosbag_record_pick" pkg="rosbag" type="record"
       args="record -O $(find pkg_task5)/bag_files/$(arg rec_name) --chunksize=10 /eyrc/vb/ur5_1/vacuum_gripper/logical_camera/ur5_1 /eyrc/vb/ur5_2/vacuum_gripper/logical_camera/ur5_2" output="screen"/>
    </group>




</launch>
